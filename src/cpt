#!/bin/sh -ef

if [ -f ./cpt-lib ]; then . ./cpt-lib; else . cpt-lib; fi

# If none of the tools below are specified, we will reenable glob
unset glob

[ "$1" ] && { arg=$1; shift; }
case "$arg" in
    --help|-h|'')
        log "Carbs Packaging Tool"
        set --
        for path in $(SEARCH_PATH=$PATH pkg_find cpt-* all -x); do
            set -- "${path#*/cpt-}" "$@"
            max=$((${#1} > max ? ${#1} : max))
        done

        for path; do
            printf "%b->%b %-${max}s  " "$colorb" "$colre" "${path#*/cpt-}"
            awk 'NR==2{if(/^# /){sub(/^# */,"");print}else print "";exit}' \
                "$(command -v "cpt-$path")"
        done | sort -uk1 >&2
        exit
        ;;

    --version|-v|version) version ;;

    # Reserve these arguments for the following tools.
    a|alternatives) arg=alternatives ;;
    b|build)        arg=build ;;
    c|checksum)     arg=checksum ;;
    d|download)     arg=download ;;
    i|install)      arg=install ;;
    l|list)         arg=list ;;
    r|remove)       arg=remove ;;
    s|search)       arg=search ;;
    u|update)       arg=update ;;
    bi)
        # Build and install function for cpt.
        cpt-build "$@"

        # When building multiple packages, cpt will already ask to install
        # the packages, so no need for this here.
        [ "$2" ] || cpt-install "$@"
        exit
        ;;
    cbi)
        # Checksum, build and install.
        cpt-checksum "$@"; cpt-build "$@"
        [ "$2" ] || cpt-install "$@"
        exit
        ;;
    *) glob=1 ;;
esac

util=$(SEARCH_PATH=$PATH pkg_find "cpt-$arg${glob:+*}" "" -x 2>/dev/null) ||
    die "'cpt $arg' is not a valid command"

"$util" "$@"
